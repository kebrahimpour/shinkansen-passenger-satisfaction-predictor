# Dockerfile for FastAPI serving of Shinkansen passenger satisfaction predictor
# Based on tiangolo/uvicorn-gunicorn-fastapi:python3.10

FROM tiangolo/uvicorn-gunicorn-fastapi:python3.12

# Set working directory
WORKDIR /app

# Install uv for faster dependency management
RUN pip install uv

# Copy dependency files first for better Docker layer caching
COPY pyproject.toml uv.lock* ./

# Install dependencies using uv
RUN uv sync --frozen --no-dev

# Copy source code
COPY src/ /app/src/

# Copy models directory if it exists (optional)
COPY models/ /app/models/ 2>/dev/null || mkdir -p /app/models

# Set Python path to include src directory
ENV PYTHONPATH="/app/src:${PYTHONPATH}"

# Set the module and variable name for uvicorn
ENV MODULE_NAME="shinkansen_predictor.api"
ENV VARIABLE_NAME="app"

# Set host and port
ENV HOST="0.0.0.0"
ENV PORT="80"

# Expose port 80
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:80/health || exit 1

# The base image already includes the CMD to run uvicorn with gunicorn workers
# CMD is inherited from tiangolo/uvicorn-gunicorn-fastapi:python3.10
# It will run: uvicorn $MODULE_NAME:$VARIABLE_NAME --host $HOST --port $PORT

# For development override, you can run:
# docker run -p 8000:80 -e MODULE_NAME="shinkansen_predictor.api" -e VARIABLE_NAME="app" <image>

[project.optional-dependencies]
dev = [
"pre-commit",
# ...other dev dependencies...
]
